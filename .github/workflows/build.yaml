name: Build & Deploy Wally

env:
  IMAGE_TAG_BACKEND: ghcr.io/fabian416/voice-wallet/backend
  IMAGE_TAG_FRONTEND: ghcr.io/fabian416/voice-wallet/frontend

  IMAGE_VERSION: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
  NEXT_PUBLIC_ENVIRONMENT: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}

on:
  push:
    branches:
      - main
      - develop

jobs:
  build_backend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Enable Corepack & Set Yarn for backend
        run: |
          corepack enable
          corepack prepare yarn@1.22.19 --activate

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Backend Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ env.IMAGE_TAG_BACKEND }}:${{ env.IMAGE_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build_frontend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v5
        with:
          context: ./front-end
          file: ./front-end/Dockerfile
          push: true
          tags: ${{ env.IMAGE_TAG_FRONTEND }}:${{ env.IMAGE_VERSION }}
          build-args: |
            NEXT_PUBLIC_ENVIRONMENT=${{ env.NEXT_PUBLIC_ENVIRONMENT }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
